{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL } from '../constants/productConstants';\nexport const listProducts = function () {\n  let keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return async dispatch => {\n    try {\n      dispatch({\n        type: PRODUCT_LIST_REQUEST\n      });\n      const {\n        data\n      } = await axios.get(`/api/products/`);\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n      });\n    }\n  };\n};\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const deleteProduct = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/products/delete/${id}`, config);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post( // to Django\n    `/api/products/create/`, {}, config);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put( // to Django\n    `/api/products/update/${product._id}/`, product, config);\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post( // to Django\n    `/api/products/${productId}/reviews/`, review, config);\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["E:/DjangoEcommerce/frontend/src/actions/productActions.js"],"names":["axios","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","listProducts","keyword","dispatch","type","data","get","payload","error","response","detail","message","listProductDetails","id","deleteProduct","getState","userLogin","userInfo","config","headers","Authorization","token","delete","createProduct","post","updateProduct","product","put","_id","createProductReview","productId","review"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nimport { \r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST, \r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST, \r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST, \r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST, \r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST, \r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    \r\n\r\n } from '../constants/productConstants'\r\n\r\n export const listProducts = (keyword='') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n        const {data} = await axios.get(`/api/products/`)\r\n\r\n        dispatch( {\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n }\r\n\r\n\r\n export const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n        const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch( {\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n }\r\n\r\n export const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const { \r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.delete(\r\n                `/api/products/delete/${id}`,\r\n                config\r\n            )\r\n        \r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n            \r\n        })\r\n   \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const { \r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.post(                   // to Django\r\n                `/api/products/create/`,\r\n                {},\r\n                config\r\n            )\r\n        \r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n \r\n \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const { \r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.put(                   // to Django\r\n                `/api/products/update/${product._id}/`,\r\n                product,\r\n                config\r\n            )\r\n        \r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({type: PRODUCT_DETAILS_SUCCESS, \r\n                  payload: data\r\n                })\r\n \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const { \r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.post(                   // to Django\r\n                `/api/products/${productId}/reviews/`,\r\n                review,\r\n                config\r\n            )\r\n        \r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        \r\n \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}