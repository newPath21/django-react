{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from '../constants/userConstants';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register/', {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}/`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile/update/`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete( // to Django\n    `/api/users/delete/${id}/`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put( // to Django\n    `/api/users/update/${user._id}/`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["E:/DjangoEcommerce/frontend/src/actions/userActions.js"],"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","listUsers","deleteUser","delete","updateUser","_id"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nimport { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    \r\n\r\n    } from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'   \r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.post(\r\n                '/api/users/login/',\r\n                { 'username':email, 'password':password },\r\n                config)\r\n        \r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n        \r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n    dispatch({type: USER_LIST_RESET})\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.post(\r\n                '/api/users/register/',\r\n                { 'name': name, 'email': email, 'password':password },\r\n                config)\r\n        \r\n        dispatch({\r\n            type:USER_REGISTER_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n    } catch (error) { \r\n        dispatch({ \r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { \r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(\r\n                `/api/users/${id}/`,\r\n                \r\n                config\r\n            )\r\n        \r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n      \r\n\r\n\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const { \r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.put(\r\n                `/api/users/profile/update/`,\r\n                user,\r\n                config\r\n            )\r\n        \r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n      \r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({ \r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const { \r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.get(\r\n                `/api/users/`,\r\n                config\r\n            )\r\n        \r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const { \r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.delete(                   // to Django\r\n                `/api/users/delete/${id}/`,\r\n                config\r\n            )\r\n        \r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const { \r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} = await axios.put(                   // to Django\r\n                `/api/users/update/${user._id}/`,\r\n                user,\r\n                config\r\n            )\r\n        \r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n            \r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n \r\n    } catch (error) {\r\n        dispatch({ \r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}