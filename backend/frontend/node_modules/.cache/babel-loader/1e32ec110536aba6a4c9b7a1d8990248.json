{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressInfoFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressInfoFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["E:/DjangoEcommerce/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressInfoFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,kBAAT,EACQC,qBADR,EAEQC,oBAFR,EAGQC,oBAHR,EAIQC,oBAJR,EAKQC,0BALR,QAK0C,4BAL1C;AAOA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EACSC,kBADT,EAESC,wBAFT,EAGSC,eAHT,EAISC,iBAJT,EAKSC,iBALT,QAKkC,yBALlC;AAOA,SAASC,kBAAT,EACQC,mBADR,EAEQC,eAFR,EAGQC,kBAHR,EAIQC,gBAJR,EAKQC,mBALR,QAMa,0BANb;AAQA,MAAMC,OAAO,GAAGxB,eAAe,CAAC;AAC5ByB,EAAAA,WAAW,EAAErB,kBADe;AAE5BsB,EAAAA,cAAc,EAAErB,qBAFY;AAG5BsB,EAAAA,aAAa,EAAErB,oBAHa;AAI5BsB,EAAAA,aAAa,EAAErB,oBAJa;AAK5BsB,EAAAA,aAAa,EAAErB,oBALa;AAM5BsB,EAAAA,IAAI,EAAEpB,WANsB;AAQ5BqB,EAAAA,SAAS,EAAEpB,gBARiB;AAS5BqB,EAAAA,YAAY,EAAEpB,mBATc;AAU5BqB,EAAAA,WAAW,EAAEpB,kBAVe;AAW5BqB,EAAAA,iBAAiB,EAAEpB,wBAXS;AAY5BqB,EAAAA,QAAQ,EAAEpB,eAZkB;AAa5BqB,EAAAA,UAAU,EAAEpB,iBAbgB;AAc5BqB,EAAAA,UAAU,EAAEpB,iBAdgB;AAgB5BqB,EAAAA,WAAW,EAAEpB,kBAhBe;AAiB5BqB,EAAAA,YAAY,EAAEpB,mBAjBc;AAkB5BqB,EAAAA,QAAQ,EAAEpB,eAlBkB;AAmB5BqB,EAAAA,WAAW,EAAEpB,kBAnBe;AAoB5BqB,EAAAA,SAAS,EAAEpB,gBApBiB;AAqB5BoB,EAAAA,SAAS,EAAEpB,gBArBiB;AAsB5BqB,EAAAA,YAAY,EAAEpB;AAtBc,CAAD,CAA/B;AA0BA,MAAMqB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACrBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADqB,GAC2B,EADxD;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACpBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADoB,GAC2B,IADvD;AAGA,MAAMI,8BAA8B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GACuB,EAD9D;AAGA,MAAMK,YAAY,GAAG;AACjBrB,EAAAA,IAAI,EAAC;AAACsB,IAAAA,SAAS,EAAER,oBAAZ;AACCS,IAAAA,eAAe,EAAEH;AADlB,GADY;AAGjBnB,EAAAA,SAAS,EAAC;AAACuB,IAAAA,QAAQ,EAAEL;AAAX;AAHO,CAArB;AAMA,MAAMM,UAAU,GAAG,CAACrD,KAAD,CAAnB;AAEA,MAAMsD,KAAK,GAAGzD,WAAW,CAACyB,OAAD,EAAU2B,YAAV,EACAhD,mBAAmB,CAACF,eAAe,CAAC,GAAGsD,UAAJ,CAAhB,CADnB,CAAzB;AAIA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { productListReducer, \r\n        productDetailsReducer, \r\n        productDeleteReducer,\r\n        productCreateReducer,\r\n        productUpdateReducer,\r\n        productReviewCreateReducer } from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, \r\n         userDetailsReducer, \r\n         userUpdateProfileReducer, \r\n         userListReducer,\r\n         userDeleteReducer,\r\n         userUpdateReducer } from './reducers/userReducers'\r\n\r\nimport { orderCreateReducer, \r\n        orderDetailsReducer, \r\n        orderPayReducer, \r\n        orderListMyReducer,\r\n        orderListReducer,\r\n        orderDeliverReducer } \r\n        from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    cart: cartReducer,\r\n\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer\r\n    \r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n        JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressInfoFromStorage = localStorage.getItem('shippingAddress') ?\r\n        JSON.parse(localStorage.getItem('shippingAddress')) : {}        \r\n\r\nconst initialState = {\r\n    cart:{cartItems: cartItemsFromStorage,\r\n          shippingAddress: shippingAddressInfoFromStorage},\r\n    userLogin:{userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, \r\n                         composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\nexport default store\r\n"]},"metadata":{},"sourceType":"module"}