{"ast":null,"code":"var _jsxFileName = \"E:\\\\DjangoEcommerce\\\\frontend\\\\src\\\\screens\\\\ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductEditScreen(_ref) {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  const productId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch(); //const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    error,\n    loading,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== Number(productId)) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, product, productId, history, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      description\n    }));\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    formData.append('product_id', productId);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/products/upload/', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      setUploading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0442\\u043E\\u0432\\u0430\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 27\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 20\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 40\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u0426\\u0435\\u043D\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0446\\u0435\\u043D\\u0443\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u041A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: uploadFileHandler,\n            custom: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u0411\\u0440\\u0435\\u043D\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0431\\u0440\\u0435\\u043D\\u0434\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countInStock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u0412 \\u043D\\u0430\\u043B\\u0438\\u0447\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u043B\\u0438\\u0447\\u0438\\u0435\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044E\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductEditScreen, \"TPFKgDYrJjZIm/ZzvXWaTocM+xs=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["E:/DjangoEcommerce/frontend/src/screens/ProductEditScreen.js"],"names":["React","useState","useEffect","axios","Link","Form","Button","useDispatch","useSelector","Loader","Message","FormContainer","listProductDetails","updateProduct","PRODUCT_UPDATE_RESET","USER_UPDATE_RESET","ProductEditScreen","match","history","productId","params","id","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","dispatch","productDetails","state","error","loading","product","productUpdate","errorUpdate","loadingUpdate","success","successUpdate","type","push","_id","Number","submitHandler","e","preventDefault","uploadFileHandler","file","target","files","formData","FormData","append","config","headers","data","post","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n  \r\n    const productId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { error, loading, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate;\r\n\r\n\r\n  useEffect(() => {\r\n\r\n            if(successUpdate) {\r\n                dispatch({type: PRODUCT_UPDATE_RESET})\r\n                history.push('/admin/productlist')\r\n            }\r\n            else {\r\n                  if(!product.name || product._id !== Number(productId)) {\r\n                    dispatch(listProductDetails(productId))\r\n                    } else{\r\n                            setName(product.name);\r\n                            setPrice(product.price);\r\n                            setImage(product.image);\r\n                            setBrand(product.brand);\r\n                            setCategory(product.category);\r\n                            setCountInStock(product.countInStock);\r\n                            setDescription(product.description);\r\n                        }\r\n                } \r\n\r\n           \r\n    }, [dispatch, product, productId, history, successUpdate]);  \r\n\r\n     \r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        countInStock,\r\n        description        \r\n    }))\r\n    \r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n\r\n    formData.append('image', file)\r\n    formData.append('product_id', productId)\r\n\r\n    setUploading(true)\r\n\r\n    try{\r\n        const config = {\r\n          headers: {\r\n              'Content-Type':'multipart/form-data'\r\n          }\r\n        }\r\n\r\n        const {data} = await axios.post('/api/products/upload/', formData, config)\r\n        \r\n        setImage(data)\r\n        setUploading(false)\r\n\r\n    }catch(error) {\r\n      setUploading(false)\r\n    }\r\n  } \r\n\r\n  return (\r\n    <div>\r\n        <Link to='/admin/productlist'>\r\n           Назад\r\n        </Link>\r\n      <FormContainer>\r\n        <h1>Редактировать товар</h1>\r\n        {loadingUpdate && <Loader/>}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n        {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> \r\n        : (\r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Название</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Введите название\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Цена</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Введите цену\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n  \r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Картинка</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Введите картинку\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              \r\n              <Form.Control\r\n                 \r\n                 type=\"file\"\r\n                 \r\n                 onChange={uploadFileHandler}\r\n                 custom\r\n                   >\r\n              </Form.Control>\r\n\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n            \r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Бренд</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Введите бренд\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n  \r\n            <Form.Group controlId=\"countInStock\">\r\n              <Form.Label>В наличии</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Введите наличие\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Категория</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Введите категорию\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Описание</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Введите описание\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n  \r\n   \r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n        \r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}