{"ast":null,"code":"import _slicedToArray from\"E:/DjangoEcommerce/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Link}from\"react-router-dom\";import{Form,Button}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import Loader from\"../components/Loader\";import Message from\"../components/Message\";import FormContainer from\"../components/FormContainer\";import{getUserDetails,updateUser}from\"../actions/userActions\";import{USER_UPDATE_RESET}from'../constants/userConstants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function UserEditScreen(_ref){var match=_ref.match,history=_ref.history;var userId=match.params.id;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isAdmin=_useState6[0],setIsAdmin=_useState6[1];var dispatch=useDispatch();//const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\nvar userDetails=useSelector(function(state){return state.userDetails;});var error=userDetails.error,loading=userDetails.loading,user=userDetails.user;var userUpdate=useSelector(function(state){return state.userUpdate;});var errorUpdate=userUpdate.error,loadingUpdate=userUpdate.loading,successUpdate=userUpdate.success;useEffect(function(){if(successUpdate){dispatch({type:USER_UPDATE_RESET});history.push('/admin/userList');}else{if(!user.name||user._id!==Number(userId)){dispatch(getUserDetails(userId));}else{setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);}}},[user,userId,successUpdate,history]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateUser({_id:user._id,name:name,email:email,isAdmin:isAdmin}));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/admin/userlist\",children:\"\\u041D\\u0430\\u0437\\u0430\\u0434\"}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{}),errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"\\u0418\\u043C\\u044F\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"\\u041F\\u043E\\u0447\\u0442\\u0430\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter Email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"isadmin\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"Is Admin\",checked:isAdmin,onChange:function onChange(e){return setIsAdmin(e.target.checked);}})}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"})]})]})]});}export default UserEditScreen;","map":{"version":3,"sources":["E:/DjangoEcommerce/backend/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Loader","Message","FormContainer","getUserDetails","updateUser","USER_UPDATE_RESET","UserEditScreen","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","error","loading","user","userUpdate","errorUpdate","loadingUpdate","successUpdate","success","type","push","_id","Number","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n  const userId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate;\r\n\r\n\r\n  useEffect(() => {\r\n\r\n      if(successUpdate) {\r\n        dispatch({type: USER_UPDATE_RESET})\r\n        history.push('/admin/userList')\r\n        \r\n      }else{\r\n            if(!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n                } else{\r\n                        setName(user.name);\r\n                        setEmail(user.email);\r\n                        setIsAdmin(user.isAdmin);\r\n        }\r\n    }}, [user, userId, successUpdate, history]);  \r\n\r\n     \r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({_id: user._id, name, email, isAdmin}))\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <Link to='/admin/userlist'>\r\n            Назад\r\n        </Link>\r\n      <FormContainer>\r\n        <h1>Редактировать пользователя</h1>\r\n        {loadingUpdate && <Loader/>}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message> }\r\n\r\n        {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> \r\n        : (\r\n            <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Имя</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n  \r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Почта</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n  \r\n            <Form.Group controlId=\"isadmin\">\r\n              \r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n  \r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Обновить\r\n            </Button>\r\n          </Form>\r\n        )}\r\n        \r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n"]},"metadata":{},"sourceType":"module"}